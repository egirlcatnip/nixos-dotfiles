// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "alt",
    "command": "editor.action.toggleColumnSelection"
  },
  {
    "key": "ctrl+o",
    "command": "open-by-path.open-by-path"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-open-by-path.open-by-path"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+k ctrl+pagedown",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+k ctrl+pageup",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+o",
    "command": "file-browser.open"
  },
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.toggleMinimap"
  },
  {
    "key": "alt+c",
    "command": "-toggleSearchCaseSensitive",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+c",
    "command": "-toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "code-runner.run"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "ctrl+space",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+a",
    "command": "-yo1dog.cursor-align.alignCursors",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k m",
    "command": "-workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.disconnect",
    "when": "focusedSessionIsAttach && inDebugMode"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.debug.nextConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.debug.prevConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "shift+f9",
    "command": "-editor.debug.action.toggleInlineBreakpoint",
    "when": "editorTextFocus"
  },
  {
    "key": "f6",
    "command": "-workbench.action.debug.pause",
    "when": "debugState == 'running'"
  },
  {
    "key": "ctrl+shift+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "f10",
    "command": "-extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
  },
  {
    "key": "f11",
    "command": "-extension.node-debug.startWithStopOnEntry",
    "when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "ctrl+f11",
    "command": "-workbench.action.debug.stepIntoTarget",
    "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
  },
  {
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && editorTextFocus"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+f",
    "command": "-editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+k",
    "command": "-code-runner.runCustomCommand"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-rust-analyzer.matchingBrace",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-rust-analyzer.joinLines",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+shift+u",
    "command": "-rust-analyzer.parentModule",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+alt+j",
    "command": "-code-runner.runByLanguage"
  },
  {
    "key": "alt+f1",
    "command": "-editor.action.showAccessibilityHelp"
  },
  {
    "key": "shift+alt+f1",
    "command": "-editor.action.showAccessibilityHelp"
  },
  {
    "key": "ctrl+alt+p",
    "command": "-metaGo.inSurroundingPairSelectionWithPairs",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+p",
    "command": "-metaGo.inSurroundingPairSelection",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+p",
    "command": "-metaGo.changeSurroundingPair",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+\\",
    "command": "-metaGo.bookmark.view"
  },
  {
    "key": "alt+delete",
    "command": "-metaGo.metaJump.deleteToAfter",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+backspace",
    "command": "-metaGo.metaJump.deleteToBefore",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+k",
    "command": "-editor.action.selectFromAnchorToCursor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "ctrl+k ctrl+k",
    "command": "-editor.action.defineKeybinding",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "workbench.action.openSettings2"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-workbench.action.keybindingsReference"
  },
  {
    "key": "ctrl+k ctrl+k",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+k s",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "ctrl+k k",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "shift+tab",
    "command": "-outdent",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "shift+enter",
    "command": "-python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+k t",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+[Backquote]",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "f3",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+f3",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+enter",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "enter",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "alt+down",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+right",
    "command": "-workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "down",
    "command": "-workbench.action.terminal.navigationModeFocusNext",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.navigationModeFocusNext",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "pagedown",
    "command": "-workbench.action.terminal.navigationModeFocusNextPage",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
  },
  {
    "key": "up",
    "command": "-workbench.action.terminal.navigationModeFocusPrevious",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
  },
  {
    "key": "ctrl+up",
    "command": "-workbench.action.terminal.navigationModeFocusPrevious",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "pageup",
    "command": "-workbench.action.terminal.navigationModeFocusPreviousPage",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalNavigationModeActive && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalNavigationModeActive && terminalProcessSupported"
  },
  {
    "key": "shift+escape",
    "command": "-workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+insert",
    "command": "-workbench.action.terminal.pasteSelection",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.terminal.searchWorkspace",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "alt+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+r",
    "command": "-workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+z",
    "command": "-workbench.action.terminal.sizeToContentWidth",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-workbench.action.terminal.focusTabs",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "alt+up",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+left",
    "command": "-workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "shift+pageup",
    "command": "-cursorColumnSelectPageUp",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "shift+pagedown",
    "command": "-cursorColumnSelectPageDown",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "ctrl+alt+m",
    "command": "-code-runner.stop"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+a",
    "command": "editor.action.autoFix"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "ctrl+shift+q",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+[Period]",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-workbench.action.terminal.selectToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.terminal.focusTabs",
    "when": "terminalFocus"
  },
  {
    "key": "shift+pagedown",
    "command": "-workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+up",
    "command": "-workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+shift+up",
    "command": "-workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "shift+pageup",
    "command": "-workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+up",
    "command": "-workbench.action.terminal.selectToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.showAllSymbols",
    "when": "!terminalFocus && !listFocus"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "alt+t",
    "command": "terminal.focus",
    "when": "listFocus"
  },
  {
    "key": "shift+down",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus"
  },
  {
    "key": "shift+up",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+[Comma]",
    "command": "-workbench.action.openGlobalSettings"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+shift+b",
    "command": "gitlens.toggleLineBlame"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+shift+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+shift+space",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "win+k win+c",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  },
  {
    "key": "ctrl+[Equal]",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "ctrl+-",
    "command": "editor.action.fontZoomOut"
  },
  {
    "key": "ctrl+1",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "ctrl+shift+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+=",
    "command": "editor.action.fontZoomOut"
  },
  {
    "key": "ctrl+shift+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+[Equal]",
    "command": "easyTerminalZoom.zoomOut",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+-",
    "command": "-easyTerminalZoom.zoomOut",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+1",
    "command": "easyTerminalZoom.zoomIn",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+=",
    "command": "-easyTerminalZoom.zoomIn",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+=",
    "command": "easyTerminalZoom.zoomIn",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+-",
    "command": "easyTerminalZoom.zoomOut",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  }
]